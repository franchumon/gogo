import java.util.*;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        GestorVuelos gestor = GestorVuelos.getInstancia();
        
        // aqui usamos bridge
        GestorReservas gestorReservas = new GestorReservas(new InterfazConsola());
        
        Vuelo vueloSeleccionado = null;
        String asientoSeleccionado = null;
        
        while (true) {
            System.out.println("\n=== SISTEMA DE RESERVAS DE VUELOS ===");
            System.out.println("1. Ver vuelos disponibles");
            System.out.println("2. Seleccionar vuelo y asiento");
            System.out.println("3. Pagar reserva");
            System.out.println("4. Ver mis reservas");
            System.out.println("5. Modificar reserva");
            System.out.println("6. Cancelar Reserva");
            System.out.println("7. Salir");
            System.out.print("Seleccione una opción: ");
            
            int opcion = Integer.parseInt(scanner.nextLine());
            
            switch (opcion) {
                case 1:
                    System.out.println("\nvuelos disponibles:");
                    List<Vuelo> vuelos = gestor.getVuelosDisponibles();
                    for (int i = 0; i < vuelos.size(); i++) {
                        System.out.println((i+1) + ". " + vuelos.get(i));
                    }
                    break;
                    
                case 2:
                    System.out.println("\nselecciona un vuelo:");
                    List<Vuelo> vuelosDisponibles = gestor.getVuelosDisponibles();
                    for (int i = 0; i < vuelosDisponibles.size(); i++) {
                        System.out.println((i+1) + ". " + vuelosDisponibles.get(i));
                    }
                    System.out.print("Numero de vuelo: ");
                    int seleccion = Integer.parseInt(scanner.nextLine()) - 1;
                    
                    if (seleccion >= 0 && seleccion < vuelosDisponibles.size()) {
                        vueloSeleccionado = vuelosDisponibles.get(seleccion).clone();
                        
                        System.out.println("\n estos son nuestros asientos disponibles " + vueloSeleccionado + ":");
                        System.out.println(vueloSeleccionado.getAsientosDisponibles());
                        System.out.print("selecciona un asiento: ");
                        asientoSeleccionado = scanner.nextLine();
                        
                        if (vueloSeleccionado.reservarAsiento(asientoSeleccionado)) {
                            System.out.println("el asiento " + asientoSeleccionado + " reservado temporalmente");
                        } else {
                            System.out.println("Asiento no disponible");
                            vueloSeleccionado = null;
                            asientoSeleccionado = null;
                        }
                    } else {
                        System.out.println("Selección inválida");
                    }
                    break;
                    
                case 3:
                    if (vueloSeleccionado == null) {
                        System.out.println("no hay vuelo seleccionado para pagar");
                        break;
                    }
                    
                    System.out.println("\nresumen de reserva:");
                    System.out.println("Vuelo: " + vueloSeleccionado);
                    System.out.println("Asiento: " + asientoSeleccionado);
                    
                    System.out.println("\nselecciona metodo de pago:");
                    System.out.println("1. tarjeta de credito");
                    System.out.println("2. paypal");
                    System.out.print("Opción: ");
                    int metodo = Integer.parseInt(scanner.nextLine());
                    
                    MetodoPago pago = (metodo == 2) ? 
                        new AdaptadorPaypal(obtenerEmailPaypal(scanner)) : 
                        new AdaptadorTarjetaCredito();
                    
                    if (metodo != 1 && metodo != 2) {
                        System.out.println("Opcion invalida, usando tarjeta de crédito por defecto");
                    }
                    
                    // pago y adapters
                    pago.realizarPago();
                    gestor.agregarReserva(vueloSeleccionado);
                    
                    System.out.println("Reserva realizada");
                    vueloSeleccionado = null;
                    asientoSeleccionado = null;
                    break;
                    
                case 4:
                    System.out.println("\nMis reservas:");
                    gestorReservas.mostrarReservas(gestor.getReservas());
                    break;
                    
                case 5:
                    gestorReservas.modificarReserva(gestor.getReservas(), scanner);
                    break;

                case 6:
                    List<Vuelo> reservas = gestor.getReservas();
                    if (reservas.isEmpty()) {
                        System.out.println("\nNo tiene reservas para cancelar");
                        break;
                    }
                    
                    System.out.println("\nselecciona reserva a cancelar:");
                    for (int i = 0; i < reservas.size(); i++) {
                        System.out.println((i+1) + ". " + reservas.get(i));
                    }
                    System.out.print("numero de reserva: ");
                    int reservaCancelar = Integer.parseInt(scanner.nextLine()) - 1;

                    if (reservaCancelar >= 0 && reservaCancelar < reservas.size()) {
                        gestor.cancelarReserva(reservas.get(reservaCancelar));
                        System.out.println("reserva cancelada");
                    } else {
                        System.out.println("selección invalida");
                    }
                    break;

                case 7:
                    System.out.println("Gracias por usar nuestro sistema de reservas");
                    scanner.close();
                    return;

                default:
                    System.out.println("Opcion invalida, intente nuevamente");    
            }
        }
    }
    
    private static String obtenerEmailPaypal(Scanner scanner) {
        System.out.print("ingrese su email de paypal: ");
        return scanner.nextLine();
    }
}
